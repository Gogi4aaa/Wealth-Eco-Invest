@model AnnounceQueryViewModel
@{
	ViewData["Title"] = "Announces";
	int announceSortingNumber = (int)Model.AnnounceSorting;
}
<div class="d-flex">
	<div class="d-flex justify-content-center" style="width: 80%;">
		<form method="get" asp-action="All" asp-controller="Announce">
			<div class="d-flex">
				<div class="form-group" style="width: 270px;">
					<input asp-for="SearchTerm" class="form-control" placeholder="Search...">
				</div>
				<div class="form-group">
					<button class="btn btn-dark" type="submit"><i class="fa-solid fa-magnifying-glass"></i></button>
				</div>
			</div>
		</form>
	</div>
	<div class="btn-group">
		<button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
			@Model.AnnounceSorting
		</button>
		<ul class="dropdown-menu">
			<li>
				<a
					class="dropdown-item"
					asp-action="All"
					asp-controller="Announce"
					asp-route-orderBy="0">
					Newest
				</a>
			</li>
			<li><hr class="dropdown-divider"></li>
			<li>
				<a
					class="dropdown-item"
					asp-action="All"
					asp-controller="Announce"
					asp-route-orderBy="1">
					Oldest
				</a>
			</li>
			<li><hr class="dropdown-divider"></li>
			<li>
				<a 
					class="dropdown-item"
					asp-action="All"
					asp-controller="Announce"
					asp-route-orderBy="2">
					Price (Ascending)
				</a>
			</li>
			<li><hr class="dropdown-divider"></li>
			<li>
				<a
					class="dropdown-item"
					asp-action="All"
					asp-controller="Announce"
					asp-route-orderBy="3">
					Price (Descending)
				</a>
			</li>
		</ul>
	</div>
</div>

@{
	int previousPage = Model.CurrentPage - 1;
	if (previousPage < 1)
	{
		previousPage = 1;
	}

	int maxPage = (int)Math.Ceiling((double)Model.TotalAnnounces / (double)Model.AnnouncesPerPage);
}

<a asp-action="Add" asp-controller="Announce" class="btn btn-primary">Add Announce</a>
<div class="d-flex ">
	@if (!Model.Announces.Any())
	{
		<h2 class="mt-5">No announces found by the given criteria!</h2>
	}
	else
	{
		<div class="row g-4 mt-3 justify-content-center">
		@foreach (AllAnnouncesViewModel announce in @Model.Announces)
		{
			<div class="col-md-4 p-0 m-2 cursor-pointer" style="width: 400px;">
					<a style="text-decoration: none;color: inherit;" asp-action="Details" asp-controller="Announce" asp-route-id="@announce.Id">
				<div class="card">
					<img style="height: 350px;" src="@announce.ImageUrl" class="card-img-top" alt="Cannot load this image!">
					<div class="card-body">
						<h5 class="card-title">@announce.Title</h5>
						<p class="card-text">@announce.Description</p>
						<p class="card-text">Price: <span class="fw-bold">@announce.Price</span></p>
						<div class="text-end">
							<a asp-action="Add" asp-controller="ShoppingCart" asp-route-id="@announce.Id" class="btn btn-warning">Add to Cart</a>
						</div>
					</div>
					</div>
				</a>
			</div>
			
		}
		</div>
	}
</div>

<div class="row mb-3">
	<div class="mt-4 col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
		<a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
		   asp-controller="Announce"
		   asp-action="All"
		   asp-route-currentPage="@previousPage"
		   asp-route-category="@Model.Category"
		   asp-route-orderBy="@ViewData["announceSorting"]"
		   asp-route-searchTerm="@Model.SearchTerm">Previous</a>
	</div>

	@{
		bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
		                                !Model.Announces.Any();
	}

	<div class="mt-4 col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
		<a class="btn btn-primary 
           @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
		   asp-controller="Announce"
		   asp-action="All"
		   asp-route-currentPage="@(Model.CurrentPage + 1)"
		   asp-route-category="@Model.Category"
		   asp-route-orderBy="@ViewData["announceSorting"]"
		   asp-route-searchTerm="@Model.SearchTerm">Next</a>
	</div>
</div>
