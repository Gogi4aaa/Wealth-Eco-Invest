@model EnvironmentNewsServiceModel
@{
    ViewData["Title"] = "Home Page";
	
	int startPage = Model.CurrentPage - 5;
	int endPage = Model.CurrentPage + 4;
	int maxPage = (int)Math.Ceiling((double)Model.TotalNews / (double)Model.NewsPerPage);
	if (startPage <= 0)
	{
		endPage = endPage - (startPage - 1);
		startPage = 1;
	}
	if (endPage > maxPage)
	{
		endPage = maxPage;
		if (endPage > 10)
		{
			startPage = endPage - 9;
		}
	}

	int previousPage = Model.CurrentPage - 1;
	if (previousPage < 1)
	{
		previousPage = 1;
	}

	bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
									!Model.Articles.Any();
}
<div class="text-center d-flex">
	<div class="row justify-content-center">
	@{
		foreach (var article in Model.Articles)
		{
			var body = article.Description;
			var title = article.Title;
			if (article.Description.Length > 60)
			{
				body = "";
				var i = 0;
				while (i < 60)
				{
					body += article.Description[i];
					i++;
				}
				body += "...";
			}
			if (article.Title.Length > 50)
			{
				title = "";
				var i = 0;
				while (i < 50)
				{
					title += article.Description[i];
					i++;
				}
				title += "...";
			}

			<div class="col-sm-6 card ms-2 me-2 mt-2" style="width: 18rem;">
				@if (string.IsNullOrEmpty(@article.UrlToImage))
				{
					<img style="height: 220px; padding-top: 0.7rem;" src="~/no-image.png" class="card-img-top">
				}
				else
				{
					<img style="height: 220px;padding-top: 0.7rem;" src="@article.UrlToImage" class="card-img-top">
				}
				<div class="card-body mt-2">
					<h5 class="card-title">@title</h5>
					<p class="card-text">Author: <span class="fw-bold">@article.Author</span></p>
					<p class="card-text">@body</p>
					<a href="@article.Url" target="_blank" class="btn btn-warning">More Information</a>
				</div>
			</div>
		}
		}
	</div>
</div>
<ul class="pagination d-flex justify-content-center mt-4">
	<li class="page-item @(Model.CurrentPage == 1 ? "disabled" : string.Empty)">
		<a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
		   asp-controller="Home"
		   asp-action="Index"
		   asp-route-page="@previousPage">
			<span aria-hidden="true">&laquo;</span>
		</a>
	</li>
	@for(int i = startPage; i <= endPage; i++)
	{
		<li class="page-item ms-1 me-1  @(i == Model.CurrentPage ? "active" : string.Empty)">
			<a class="page-link rounded" 
			   asp-controller="Home"
			   asp-action="Index"
			   asp-route-page="@i">@i</a>
		</li>
	}
	<li class="page-item @(shouldNextPageBeDisabled ? "disabled" : string.Empty)">
		<a class="btn btn-primary
           @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
		   asp-controller="Home"
		   asp-action="Index"
		   asp-route-page="@(Model.CurrentPage + 1)">
			<span aria-hidden="true">&raquo;</span>
		</a>
	</li>
</ul>
